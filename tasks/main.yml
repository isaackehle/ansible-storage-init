---
  - name: Make sure packages are installed
    become: true
    apt: 
      name: 
        - parted
        - xfsprogs
      state: present

  - name: Check if mounted
    become: true
    raw: mount
    register: mnt_out
    ignore_errors: yes

  - name: Unmount device, if mounted
    become: true
    mount:
      name: "{{ mnt_loc }}"
      state: unmounted
    when: 'mnt_loc in mnt_out.stdout'

  - name: Test if the partition already exists
    shell: lsblk -o NAME | grep {{ partition_name }}
    become: true
    ignore_errors: true
    register: part_tst

  - name: Partition the new storage
    become: true
    shell: parted -s {{ dev_path }} mklabel gpt mkpart primary {{ storage_cfg.type }} 0% 100%
    when: not part_tst.stdout

  - name: Get TYPE
    become: true
    command: blkid -s TYPE -o value {{ partition_path }}
    register: type_out

  - name: Set FS Typo
    set_fact: 
      fs_type_curr: "{{ type_out.stdout }}"

  - name: Make the "{{ storage_cfg.type }}" File System
    become: true
    raw: mkfs.{{ storage_cfg.type }} {{ partition_path }} -f
    when: fs_type_curr is undefined or fs_type_curr == "" or fs_type_curr != storage_cfg.type

  - name: get mount stats
    stat: 
      path: "{{ mnt_loc }}"
    register: st

  - name: Kill {{ mnt_loc }} if it exists
    file: 
      path: "{{ mnt_loc }}" 
      state: absent
    become: true

  - name: Mount up device to get uuid
    become: true
    mount:
      name: "{{ mnt_loc }}"
      src: "{{ partition_path }}"
      fstype: "{{ storage_cfg.type }}"
      opts: "rw,relatime,data=ordered"
      state: present

  - name: Get UUID
    command: blkid -s UUID -o value {{ partition_path }}
    register: uuid_out
    become: true

  - name: Set UUID
    set_fact:
      uuid: "{{ uuid_out.stdout }}"

  - name: Set ext4 mount options
    set_fact: 
      mount_opts: rw,relatime,data=ordered
    when: storage_cfg.type == "ext4"

  - name: Set xfs mount options
    set_fact: 
      mount_opts: rw,relatime,attr2,inode64,noquota
    when: storage_cfg.type == "xfs"

  - name: Unmount device
    become: true
    mount:
      name: "{{ mnt_loc }}"
      state: absent

  - name: Mount device and save to fstab
    become: true
    mount:
      name: "{{ mnt_loc }}"
      src: "UUID={{ uuid }}"
      fstype: "{{ storage_cfg.type }}"
      opts: "{{ mount_opts }}"
      state: mounted
